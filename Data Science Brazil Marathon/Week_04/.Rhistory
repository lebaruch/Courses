7 * 9 + 2 * 6
2.5 * 4
(50 + 7)/(8 * (3 - 5/2))
3 ^ 4
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
2.5 * 4
3 ^ 4
source('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/r_exercises.R', echo=TRUE)
x <-15
x
x <-15
x + 5
x * x / 2
2 ^ x
y <- x / 3
sqrt(16)
round(5.3499999, 2)
round(5.349999)
round(5.349999, 3)
round(5.349999, 1)
round(5.349999, 4)
?round
install.packages("dplyr")
install.packages("Tidyverse")
install.packages("tidyverse")
?dplyr
??dplyr
?rm
rm(y)
?rnorm
rnorm(3, 3)
rnorm(3, 3)
rnorm(3, 3)
getwd()
setwd('D:/DataScience/Courses/Data Science Brazil Marathon\Week_04')
setwd('D:/DataScience/Courses/Data\\ Science\\ Brazil\\ Marathon\Week_04')
setwd('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04')
getwd()
library(tidyverse)
senado <- read_csv("senando.csv")
senado <- read_csv("senado.csv")
head(senado)
tail(senado)
class(senado)
str(senado)
summary(senado)
senado <- read_csv("D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/senado.csv")
# Reading file with delimiter
read_delim('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/arquivo_separado_por#.txt', delim = '#')
#Reading CSV file with delimiter | and storing it in a variable
senado <- read_delim("D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/TA_PRECOS_MEDICAMENTOS.csv", delim = |)
#Reading CSV file with delimiter | and storing it in a variable
ta_precos_medicamentos <- read_delim("D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/TA_PRECOS_MEDICAMENTOS.csv", delim = |)
read_delim('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/TA_PRECOS_MEDICAMENTOS.csv', delim = '|')
#Reading CSV file with delimiter | and storing it in a variable
ta_precos_medicamentos <- read_delim("D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/TA_PRECOS_MEDICAMENTOS.csv", delim = '|')
fwf_samples <- read_fwf("D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/fwf-sample.txt", col_positions =
fwf_widths(20, 10, 12))
?read_fwf
#Reading TXT file with fixed widths columns
fwf_samples <- read_fwf("D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/fwf-sample.txt", col_positions =
fwf_widths(c(20, 10, 12), c("nomes", "estado", "codigo")))
#Class Types
inteiro <- 928
outro.inteiro <- 5e2
decimal <- 182.93
caracter <- 'exportação'
logico <- TRUE
outro.logico <- FALSE
class(inteiro)
class(outro.inteiro)
class(decimal)
class(caracter)
class(logico)
class(outro.logico)
View(ta_precos_medicamentos)
#Dataframes
class(senado)
dim(senado)
#Vectors
vetor.chr <- c('tipo1', 'tipo2', 'tipo3', 'tipo4')
vetor.num <- c(1, 2, 5, 8, 1001)
vetor.num.repetidos <- c(rep(2, 50)) #usando funcãopararepetirnúmeros
vetor.num.sequencia <- c(seq(from=0, to=100, by=5)) #usando funçãoparacriarsequências
vetor.logical <- c(TRUE, TRUE, TRUE, FALSE, FALSE)
vetor.chr
vetor.num
vetor.num.repetidos
vetor.num.sequencia
vetor.logical
7 + TRUE
2015 > "2016"
"2014" < 2017
6 > "100"
1 + "1"
"6" < 5
#Testing while
while (length(automatico) == 0) {
automatico <- list.files('automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia emailinformandoconclusãodoscálculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
#Testing while
while (length(automatico) == 0) {
automatico <- list.files('/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia emailinformandoconclusãodoscálculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
#Testing while
while (length(automatico) == 0) {
automatico <- list.files('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia emailinformandoconclusãodoscálculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
#Testing while
while (length(automatico) == 0) {
automatico <- list.files('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia emailinformandoconclusãodoscálculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
automatico <- list.files('automatico/')
while (length(automatico) == 0) {
automatico <- list.files('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia emailinformandoconclusãodoscálculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
while (length(automatico) == 0) {
automatico <- list.files('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia email informando conclusao dos calculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
while (length(automatico) == 0) {
automatico <- list.files('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia email informando conclusao dos calculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
while (length(automatico) == 0) {
automatico <- list.files('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia email informando conclusao dos calculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
automatico <- list.files('automatico/')
while (length(automatico) == 0) {
automatico <- list.files('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia email informando conclusao dos calculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
automatico <- list.files('automatico/')
while (length(automatico) == 0) {
automatico <- list.files('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia email informando conclusao dos calculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
senado.is.na("State")
is.na("State")
is.na("State")
head(senado)
is.na(senado)
is.na(senado, State)
is.na(senado, "State")
senado
senado %>%
is.na(State)
senado %>%
is.na('State')
senado %>%
is.na('State') %>%
senado %>%
is.na('State') %>%
senado %>%
is.na('State') %>%
,lkk
is.na.data.frame(senado)
is.na(State)
is.na(senado$State)
senado2 <- senado %>%
filter(State ! NA)
senado2 <- senado %>%
filter(State != NA)
is.na(senado2$State)
is.na(senado$State)
is.na(senado2$State)
filter(senado2$Party)
senado2
vetor.num
head(senado2)
senado2 <- senado %>%
select(VoteNumber, SenNumber, SenatorUpper, Vote, Party, GovCoalition, State, FP, Origin, Contentious, PercentYes,
IndGov, VoteType, Content, Round)
filter(State != NA)
senado2 <- senado %>%
select(VoteNumber, SenNumber, SenatorUpper, Vote, Party, GovCoalition, State, FP, Origin, Contentious, PercentYes,
IndGov, VoteType, Content, Round)
filter('State' != NA)
senado2 <- senado %>%
select(VoteNumber, SenNumber, SenatorUpper, Vote, Party, GovCoalition, State, FP, Origin, Contentious, PercentYes,
IndGov, VoteType, Content, Round)
filter('State' != is.na(TRUE))
senado2 <- senado %>%
select(VoteNumber, SenNumber, SenatorUpper, Vote, Party, GovCoalition, State, FP, Origin, Contentious, PercentYes,
IndGov, VoteType, Content, Round) %>%
filter(is.na(State) == FALSE)
is.na(senado2$State)
is.na(senado2$State)
select(senado2) %>%
filter(GovCoalition == TRUE)
head(senado2)
select(senado2) %>%
senado2.filter(GovCoalition == TRUE)
filter(GovCoalition == TRUE)
senado3 <- senado2 %>%
select(VoteNumber, SenNumber, SenatorUpper, Vote, Party, GovCoalition, State, FP, Origin, Contentious, PercentYes,
IndGov, VoteType, Content, Round) %>%
filter(GovCoalition == TRUE)
head(senado3)
senado2 %>%
filter(GovCoalition == TRUE)
rm(senado3)
senado2 %>%
group_by(Party) %>%
summarise(SenatorUpper) %>%
n_distinct()
senado2 %>%
group_by(Party) %>%
summarise()
n_distinct()
senado2 %>%
group_by(Party) %>%
summarise()
distinct()
senado2 %>%
group_by(Party) %>%
summarise() %>%
distinct()
senado2 %>%
group_by(Party) %>%
summarise() %>%
n_distinct()
senado2 %>%
group_by(Party) %>%
summarise(SenatorUpper) %>%
n_distinct()
senado2 %>%
group_by(Party) %>%
summarise(SenatorUpper, na.rm=TRUE) %>%
n_distinct()
senado2 %>%
group_by(Party) %>%
summarise(qty_senator = n_unique(SenatorUpper, na.rm=TRUE))
senado2 %>%
group_by(Party) %>%
summarise(qty_senator = unique(SenatorUpper, na.rm=TRUE))
senado2 %>%
group_by(Party) %>%
summarise(Party)
senado2 %>%
group_by(Party) %>%
summarise() %>%
unique()
senado2 %>%
group_by(Party) %>%
summarise(qty_senators = unique(SenatorUpper, na.rm=TRUE))
senado2 %>%
group_by(Party) %>%
summarise(qty_senators = unique(SenatorNumber, na.rm=TRUE))
senado2 %>%
group_by(Party) %>%
summarise(qty_senators = unique(SenNumber, na.rm=TRUE))
teste <- senado2 %>%
group_by(Party) %>%
summarise(qty_senators = unique(SenNumber, na.rm=TRUE))
teste <- senado2 %>%
group_by(Party) %>%
summarise(qty_senators = n_distinct(SenNumber, na.rm=TRUE))
teste
number_of_sen <- senado2 %>%
group_by(Party) %>%
summarise(qty_senators = n_distinct(SenNumber, na.rm=TRUE))
number_of_sen
number_of_yes <- senado2 %>%
group_by(Party) %>%
summarise(qty_yes = sum(Vote == 'S'))
number_of_yes
?mutate
mutate(senado2, Regiao = ifelse(State%in%c('AM','AC','TO','PA','RO','RR'),'Norte',
ifelse(State %in%c('SP','MG','RJ','ES'),'Sudeste',
ifelse(State%in%c('MT','MS', 'GO', 'DF'), 'Centro-Oeste',
ifelse(State%in%c('PR','SC','RS'),'Sul','Nordeste')))))
head(senado2)
senado3 <- mutate(senado2, Regiao = ifelse(State%in%c('AM','AC','TO','PA','RO','RR'),'Norte',
ifelse(State %in%c('SP','MG','RJ','ES'),'Sudeste',
ifelse(State%in%c('MT','MS', 'GO', 'DF'), 'Centro-Oeste',
ifelse(State%in%c('PR','SC','RS'),'Sul','Nordeste')))))
senado2 <- mutate(senado2, Regiao = ifelse(State%in%c('AM','AC','TO','PA','RO','RR'),'Norte',
ifelse(State %in%c('SP','MG','RJ','ES'),'Sudeste',
ifelse(State%in%c('MT','MS', 'GO', 'DF'), 'Centro-Oeste',
ifelse(State%in%c('PR','SC','RS'),'Sul','Nordeste')))))
rm(senado3)
rm(teste)
number_of_yes_per_region <- senado2 %>%
group_by(Regiao) %>%
summarise(qty_yes = sum(Vote == 'S'))
number_of_yes_per_region
View(ta_precos_medicamentos)
#Checking version
R.Version()
#Calculations
2*3
3^4
(50 + 7)/(8 * (3 - 5/2))
7 * 9 + 2 * 6
2.5 * 4
x <-15
x + 5
x * x / 2
2 ^ x
y <- x / 3
sqrt(16)
round(5.3499999, 2)
#Commands
install.packages("tidyverse")
?rm
?rnorm
#Importing Dataframe and checking it
library(tidyverse)
senado <- read_csv("senado.csv")
head(senado)
tail(senado)
class(senado)
str(senado)
summary(senado)
# Reading file with delimiter
read_delim('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/arquivo_separado_por#.txt', delim = '#')
#Reading CSV file with delimiter | and storing it in a variable
ta_precos_medicamentos <- read_delim("D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/TA_PRECOS_MEDICAMENTOS.csv", delim = |)
#Reading TXT file with fixed widths columns
fwf_samples <- read_fwf("D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/fwf-sample.txt", col_positions =
fwf_widths(c(20, 10, 12), c("nomes", "estado", "codigo")))
#Class Types
inteiro <- 928
outro.inteiro <- 5e2
decimal <- 182.93
caracter <- 'exportação'
logico <- TRUE
outro.logico <- FALSE
class(inteiro)
class(outro.inteiro)
class(decimal)
class(caracter)
class(logico)
class(outro.logico)
#Dataframes
class(senado)
dim(senado)
install.packages("tidyverse")
#Vectors
vetor.chr <- c('tipo1', 'tipo2', 'tipo3', 'tipo4')
vetor.num <- c(1, 2, 5, 8, 1001)
vetor.num.repetidos <- c(rep(2, 50)) #usando funcãopararepetirnúmeros
vetor.num.sequencia <- c(seq(from=0, to=100, by=5)) #usando funçãoparacriarsequências
vetor.logical <- c(TRUE, TRUE, TRUE, FALSE, FALSE)
vetor.chr
vetor.num
vetor.num.repetidos
vetor.num.sequencia
vetor.logical
7 + TRUE
2015 > "2016"
"2014" < 2017
6 > "100"
1 + "1"
"6" < 5
#Testing while
automatico <- list.files('automatico/')
while (length(automatico) == 0) {
automatico <- list.files('D:/DataScience/Courses/Data Science Brazil Marathon/Week_04/automatico/')
if(length(automatico) > 0) {
print('O arquivochegou!')
print('Inicia aleituradosdados')
print('Faz amanipulação')
print('Envia email informando conclusao dos calculos')
} else {
print('aguardando arquivo...')
Sys.sleep(5)
}
}
senado2 <- senado %>%
is.na(senado2$State)
senado2
head(senado2)
is.na(senado2$State)
senado2 <- senado %>%
filter(State != NA)
a
is.na(senado2$State)
is.na(senado2$State)
senado2 <- senado %>%
select(VoteNumber, SenNumber, SenatorUpper, Vote, Party, GovCoalition, State, FP, Origin, Contentious, PercentYes,
IndGov, VoteType, Content, Round) %>%
filter(is.na(State) == FALSE)
is.na(senado2$State)
senado2 %>%
filter(GovCoalition == TRUE)
senado2 %>%
group_by(Party) %>%
filter(GovCoalition == TRUE)
senado2 %>%
group_by(Party) %>%
filter(GovCoalition == TRUE)
number_of_sen <- senado2 %>%
group_by(Party) %>%
summarise(qty_senators = n_distinct(SenNumber, na.rm=TRUE))
number_of_sen
number_of_yes <- senado2 %>%
group_by(Party) %>%
summarise(qty_yes = sum(Vote == 'S'))
number_of_yes
senado2 <- mutate(senado2, Regiao = ifelse(State%in%c('AM','AC','TO','PA','RO','RR'),'Norte',
ifelse(State %in%c('SP','MG','RJ','ES'),'Sudeste',
ifelse(State%in%c('MT','MS', 'GO', 'DF'), 'Centro-Oeste',
ifelse(State%in%c('PR','SC','RS'),'Sul','Nordeste')))))
?str_sub
hw <- "Hadley Wickham"
str_sub(hw, 1, 6)
str_sub(hw, 1, 6)
str_sub(hw, end = 6)
str_sub(hw, 8, 14)
str_sub(hw, 8)
str_sub(hw, c(1, 8), c(6, 14))
cnae.texto <- c('10 Fabricaçãodeprodutosalimentícios', '11 Fabricaçãodebebidas',
'12 Fabricaçãodeprodutosdofumo', '13 Fabricaçãodeprodutostêxteis',
'14 Confecção deartigosdovestuárioeacessórios',
'15 Preparaçãodecourosefabricaçãodeartefatosdecouro,artigosparaviagemecalçados',
'16 Fabricaçãodeprodutosdemadeira',
'17 Fabricaçãodecelulose,papeleprodutosdepapel')
cnae <- str_sub(cnae.texto, 0, 2)
texto <- str_sub(cnae.texto, 4)
cnae
texto
texto <- str_sub(cnae.texto, 3)
texto
